<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--Mybatis에게 Mapper 경로를 적어야 한다. -->
<mapper
	namespace="com.Increase.emotionDiary.mapper.CalendarMapper">

	<select id="selectList" resultType="Map">
		SELECT
		c.calendar_id AS
		calendarId,
		m.member_id AS memberId,
		c.calendar_code AS calendarCode,
		c.calendar_month_first_day as calendarMonthFirstDay,
		c.calendar_emotion AS calendarEmotion,
		date_format(c.create_at,
		'%Y-%m-%d')as createAt,
		m.member_name AS memberName,
		c.content
		FROM
		calendar AS c
		right JOIN member AS m
		ON c.member_id = m.member_id
		left join member as mm
		on
		c.member_id = mm.member_id
		WHERE m.member_name = #{memberName}
		order by
		calendarId asc
	</select>

	<select id="selectOne" resultType="CalendarVO">
		SELECT
		c.calendar_id AS
		calendarId,
		c.member_id AS memberId,
		c.calendar_emotion AS
		calendarEmotion,
		c.content,
		c.create_at AS
		createAt,
		m.member_name AS
		memberName
		FROM calendar AS c
		INNER JOIN member AS m
		ON c.member_id =
		m.member_id
		WHERE calendar_id = #{calendarId}
	</select>

	<insert id="insertEmotion">
		INSERT INTO calendar
		(
		member_id,
		calendar_code,
		calendar_month_first_day,
		calendar_emotion,
		content
		)
		VALUES
		(
		#{memberId},
		#{calendarCode},
		#{calendarMonthFirstDay},
		#{calendarEmotion},
		#{content}
		)
	</insert>
	<delete id="deleteCalendar">
		DELETE FROM calendar
		WHERE calendar_id = #{calendarId}
	</delete>

	<select id="selectstatistics" resultType="map">

		select
		count(*) as happy,
		(select
		count(*)
		from calendar c7
		where member_id = #{memberId}
		and calendar_emotion =
		"보통") as soso,
		(
		select
		count(*)
		from calendar c2
		where member_id = #{memberId}
		and calendar_emotion =
		"설렘"
		) as romance,
		(select
		count(*)
		from calendar c3
		where member_id = #{memberId}
		and calendar_emotion =
		"분노"
		) as angry,
		(select
		count(*)
		from calendar c4
		where member_id = #{memberId}
		and calendar_emotion =
		"슬픔"
		) as sad,
		(select
		count(*)
		from calendar c5
		where member_id = #{memberId}
		and calendar_emotion =
		"짜증"
		) as irritation
		from calendar c
		where member_id = #{memberId}
		and calendar_emotion = "기쁨"
	</select>

	<update id="updateCalendar">
		UPDATE calendar
		SET
		calendar_emotion = #{calendarEmotion},
		content = #{content}
		WHERE
		calendar_id = #{calendarId}
	</update>

	<select id="selectMonth" resultType="map">
		select
		c.calendar_id AS calendarId,
		m.member_id AS memberId,
		c.calendar_code AS
		calendarCode,
		c.calendar_emotion AS calendarEmotion,
		c.calendar_month_first_day as calendarMonthFirstDay,
		date_format(c.create_at, '%Y-%m-%d')as createAt,
		m.member_name AS
		memberName,
		c.content
		FROM calendar AS c
		right join member as m
		ON c.member_id = m.member_id
		left join member as mm
		on c.member_id = mm.member_id
	<![CDATA[
	where m.member_name  like CONCAT('%',#{memberName},'%')
	and
	(
	date_format(c.create_at,'%Y%m%d') >= #{calendarMonthFirstDay}
	and date_format(c.create_at,'%Y%m%d') <= #{calendarCode}
	)]]>

	</select>
	<select id="calendarStatistics" resultType="map">
	<![CDATA[
	select
		count(*) as happy,
		(select
		count(*)
		from calendar c7
		where member_id = #{memberId}
		and calendar_emotion = "보통"
		and date_format(c7.create_at,'%Y%m%d') >= #{calendarMonthFirstDay}
		and date_format(c7.create_at,'%Y%m%d') <= #{calendarCode}
		) as soso,
		(
		select
		count(*)
		from calendar c2
		where member_id = #{memberId}
		and calendar_emotion = "설렘"
		and date_format(c2.create_at,'%Y%m%d') >= #{calendarMonthFirstDay}
		and date_format(c2.create_at,'%Y%m%d') <= #{calendarCode}
		) as romance,
		(select
		count(*)
		from calendar c3
		where member_id = #{memberId}
		and calendar_emotion = "분노"
		and date_format(c3.create_at,'%Y%m%d') >= #{calendarMonthFirstDay}
		and date_format(c3.create_at,'%Y%m%d') <= #{calendarCode}
		) as angry,
		(select
		count(*)
		from calendar c4
		where member_id = #{memberId}
		and calendar_emotion = "슬픔"
		and date_format(c4.create_at,'%Y%m%d') >= #{calendarMonthFirstDay}
		and date_format(c4.create_at,'%Y%m%d') <= #{calendarCode}
		) as sad,
		(select
		count(*)
		from calendar c5
		where member_id = #{memberId}
		and calendar_emotion = "짜증"
		and date_format(c5.create_at,'%Y%m%d') >= #{calendarMonthFirstDay}
		and date_format(c5.create_at,'%Y%m%d') <= #{calendarCode}
		) as irritation
		from calendar c
		where member_id = #{memberId}
		and calendar_emotion = "기쁨"
		and date_format(c.create_at,'%Y%m%d') >= #{calendarMonthFirstDay}
		and date_format(c.create_at,'%Y%m%d') <= #{calendarCode}
	]]>
	</select>
	
	<select id="pagingSelect" resultType="Map">
	SELECT
		c.calendar_id AS calendarId,
		m.member_id AS memberId,
		c.calendar_code AS calendarCode,
		c.calendar_month_first_day as calendarMonthFirstDay,
		c.calendar_emotion AS calendarEmotion,
		date_format(c.create_at,'%Y-%m-%d') as createAt,
		m.member_name AS memberName,
		c.content
		FROM
		calendar AS c
		right JOIN member AS m
		ON c.member_id = m.member_id
		left join member as mm
		on c.member_id = mm.member_id
		WHERE m.member_name = #{memberName}
		order by calendarId asc
	</select>
	<select id="searchPaging" resultType="Map">
		SELECT
		c.calendar_id AS calendarId,
		m.member_id AS memberId,
		c.calendar_code AS calendarCode,
		c.calendar_month_first_day as calendarMonthFirstDay,
		c.calendar_emotion AS calendarEmotion,
		date_format(c.create_at,'%Y-%m-%d') as createAt,
		m.member_name AS memberName,
		c.content
		FROM
		calendar AS c
		right JOIN member AS m
		ON c.member_id = m.member_id
		left join member as mm
		on c.member_id = mm.member_id
		WHERE m.member_name = #{memberName}
		and c.calendar_emotion = #{calendarEmotion}
		order by calendarId asc
	</select>

</mapper>